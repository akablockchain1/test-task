---
- name: Ensure Nginx is installed and configured to serve a "Hello, World!" page
  hosts: webservers
  become: true
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tasks:
    - name: Update apt repository cache and upgrade packages
      apt:
        update_cache: yes
        upgrade: dist
        cache_valid_time: 3600

    - name: Install Nginx
      apt:
        name: nginx
        state: present

    - name: Start and enable Nginx service
      systemd:
        name: nginx
        state: started
        enabled: true

    - name: Create directory for the website
      file:
        path: /var/www/html
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'

    - name: Create an index.html file with "Hello, World!" content
      copy:
        content: |
          <!DOCTYPE html>
          <html>
          <head>
              <title>Hello, World!</title>
          </head>
          <body>
              <h1>Hello, World!</h1>
          </body>
          </html>
        dest: /var/www/html/index.html
        owner: www-data
        group: www-data
        mode: '0644'

    - name: Configure Nginx to serve the custom index.html
      copy:
        content: |
          server {
              listen 80 default_server;
              listen [::]:80 default_server;

              root /var/www/html;
              index index.html;

              server_name _;

              location / {
                  try_files $uri $uri/ =404;
              }
          }
        dest: /etc/nginx/sites-available/default
        owner: root
        group: root
        mode: '0644'
      notify:
        - Restart Nginx

    - name: Disable unnecessary services
      systemd:
        name: "{{ item }}"
        state: stopped
        enabled: no
      loop:
        - apache2
        - mysql
        - postgresql
        - cups
        - rpcbind
      ignore_errors: yes

    - name: Install UFW
      apt:
        name: ufw
        state: present

    - name: Allow OpenSSH
      ufw:
        rule: allow
        name: OpenSSH

    - name: Allow HTTP
      ufw:
        rule: allow
        name: 'Nginx HTTP'

    - name: Enable UFW
      command: ufw --force enable

  handlers:
    - name: Restart Nginx
      systemd:
        name: nginx
        state: restarted
        enabled: true
