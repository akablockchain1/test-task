---
- name: Ensure Nginx and Fluentd are installed and configured
  hosts: webservers
  become: true
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tasks:
    - name: Update apt repository cache and upgrade packages
      apt:
        update_cache: yes
        upgrade: dist
        cache_valid_time: 3600

    - name: Install Nginx
      apt:
        name: nginx
        state: present

    - name: Start and enable Nginx service
      systemd:
        name: nginx
        state: started
        enabled: true

    - name: Create directory for the website
      file:
        path: /var/www/html
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'

    - name: Create an index.html file with "Hello, World!" content
      copy:
        content: |
          <!DOCTYPE html>
          <html>
          <head>
              <title>Hello, World!</title>
          </head>
          <body>
              <h1>Hello, World!</h1>
          </body>
          </html>
        dest: /var/www/html/index.html
        owner: www-data
        group: www-data
        mode: '0644'

    - name: Configure Nginx to serve the custom index.html
      copy:
        content: |
          server {
              listen 80 default_server;
              listen [::]:80 default_server;

              root /var/www/html;
              index index.html;

              server_name _;

              location / {
                  try_files $uri $uri/ =404;
              }
          }
        dest: /etc/nginx/sites-available/default
        owner: root
        group: root
        mode: '0644'
      notify:
        - Restart Nginx

    - name: Disable unnecessary services
      systemd:
        name: "{{ item }}"
        state: stopped
        enabled: no
      loop:
        - apache2
        - mysql
        - postgresql
        - cups
        - rpcbind
      ignore_errors: yes

    - name: Install UFW
      apt:
        name: ufw
        state: present

    - name: Allow OpenSSH
      ufw:
        rule: allow
        name: OpenSSH

    - name: Allow HTTP
      ufw:
        rule: allow
        name: 'Nginx HTTP'

    - name: Enable UFW
      command: ufw --force enable

    - name: Add Fluentd GPG key
      apt_key:
        url: https://packages.treasuredata.com/GPG-KEY-td-agent
        state: present

    - name: Add Fluentd repository
      apt_repository:
        repo: deb http://packages.treasuredata.com/4/ubuntu/focal focal contrib
        state: present
        update_cache: yes

    - name: Install Fluentd
      apt:
        name: td-agent
        state: present

    - name: Start and enable td-agent (Fluentd) service
      systemd:
        name: td-agent
        state: started
        enabled: true

    - name: Create denylist file
      copy:
        content: |
          108.61.172.255
        dest: /etc/td-agent/denylist.txt
        owner: td-agent
        group: td-agent
        mode: '0644'

    - name: Configure Fluentd to collect and filter Nginx logs
      copy:
        content: |
          <source>
            @type tail
            path /var/log/nginx/access.log
            pos_file /var/log/td-agent/nginx-access.log.pos
            tag nginx.access
            <parse>
              @type nginx
            </parse>
          </source>
          <source>
            @type tail
            path /var/log/nginx/error.log
            pos_file /var/log/td-agent/nginx-error.log.pos
            tag nginx.error
            <parse>
              @type none
            </parse>
          </source>
          <filter nginx.access>
            @type record_transformer
            <record>
              denylist_ip ${if File.readlines('/etc/td-agent/denylist.txt').include?(record["remote"] + "\n") then 'true' else 'false' end}
            </record>
          </filter>
          <filter nginx.access>
            @type grep
            <exclude>
              key denylist_ip
              pattern true
            </exclude>
          </filter>
          <filter nginx.access>
            @type grep
            <include>
              key denylist_ip
              pattern true
            </include>
            @label @DENYLIST
          </filter>
          <match nginx.access>
            @type file
            path /var/log/td-agent/nginx-access.log
          </match>
          <match nginx.error>
            @type file
            path /var/log/td-agent/nginx-error.log
          </match>
          <label @DENYLIST>
            <match nginx.access>
              @type file
              path /var/log/td-agent/denylist_audit.log
            </match>
          </label>
        dest: /etc/td-agent/td-agent.conf
        owner: root
        group: root
        mode: '0644'
      notify:
        - Restart Fluentd

    - name: Ensure log files exist and have correct permissions
      file:
        path: "{{ item }}"
        state: touch
        owner: td-agent
        group: td-agent
        mode: '0644'
      loop:
        - /var/log/td-agent/nginx-access.log
        - /var/log/td-agent/nginx-error.log
        - /var/log/td-agent/denylist_audit.log

    - name: Ensure permissions for Nginx log directory
      file:
        path: /var/log/nginx
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'

    - name: Ensure permissions for Nginx log files
      file:
        path: "{{ item }}"
        state: file
        owner: td-agent
        group: td-agent
        mode: '0644'
      loop:
        - /var/log/nginx/access.log
        - /var/log/nginx/error.log

    - name: Ensure permissions for td-agent log directory
      file:
        path: /var/log/td-agent
        state: directory
        owner: td-agent
        group: td-agent
        mode: '0755'

  handlers:
    - name: Restart Nginx
      systemd:
        name: nginx
        state: restarted
        enabled: true

    - name: Restart Fluentd
      systemd:
        name: td-agent
        state: restarted
        enabled: true
